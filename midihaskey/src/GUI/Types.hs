{-# LANGUAGE UnicodeSyntax #-}

module GUI.Types
     ( GUIContext (..)
     , GUIState (..)
     , GUIInterface (..)
     , GUIStateUpdate (..)
     ) where

import Prelude

import Data.HashMap.Strict

import Sound.MIDI.Message.Channel

-- local
import Types
import MIDIHasKey.Utils
import Keys.Types


data GUIContext
   = GUIContext
   { initialState             ‚à∑ GUIState

   , appExitHandler           ‚à∑ IO ()
   , panicButtonHandler       ‚à∑ IO ()
   , saveConfigButtonHandler  ‚à∑ IO ()

   , setBaseKeyHandler        ‚à∑ RowKey ‚Üí IO ()
   , setBasePitchHandler      ‚à∑ Pitch ‚Üí IO ()
   , setOctaveHandler         ‚à∑ Octave ‚Üí IO ()
   , setBaseOctaveHandler     ‚à∑ BaseOctave ‚Üí IO ()
   , setNotesPerOctaveHandler ‚à∑ NotesPerOctave ‚Üí IO ()

   , selectChannelHandler     ‚à∑ Channel ‚Üí IO ()

   , noteButtonHandler        ‚à∑ RowKey ‚Üí ùîπ ‚Üí IO ()
   }

data GUIState
   = GUIState
   { guiStateBaseKey        ‚à∑ RowKey
   , guiStateBasePitch      ‚à∑ Pitch
   , guiStateOctave         ‚à∑ Octave
   , guiStateBaseOctave     ‚à∑ BaseOctave
   , guiStateNotesPerOctave ‚à∑ NotesPerOctave

   , guiStatePitchMapping   ‚à∑ HashMap RowKey Pitch

   , guiStateChannel        ‚à∑ Channel
   , guiStateVelocity       ‚à∑ Velocity
   } deriving (Eq, Show)

data GUIInterface
   = GUIInterface
   { guiStateUpdate ‚à∑ GUIStateUpdate ‚Üí IO ()
   , guiShowAlert   ‚à∑ AlertMessage ‚Üí IO ()
   }

data GUIStateUpdate
   = SetBaseKey        RowKey
   | SetBasePitch      Pitch
   | SetOctave         Octave
   | SetBaseOctave     BaseOctave
   | SetNotesPerOctave NotesPerOctave

   | SetPitchMapping   (HashMap RowKey Pitch)

   | SetChannel        Channel
   | SetVelocity       Velocity

   | KeyButtonState    RowKey ùîπ

   | NewLastSavedState GUIState

     deriving (Show, Eq)
